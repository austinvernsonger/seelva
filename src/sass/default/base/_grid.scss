@if $useBase == true and $useGrid == true {
	/*==========  $Grid - Fluid width  ==========*/
	/*!*
	*
	* Config.
	*
	* No. of Columns:          #{$colAmount};
	* Percentual column width: #{ percentage(100 / $colAmount) };
	* Gutter width:            #{ $gutterWidth };
	*
	**/

	// /*==========  Global setup  ==========*\
	.section {
		clear: both;
		width: 100%;
	}

	.holder {
		@include cf;
		margin: 0 auto;
		max-width: $contentWidth;
		padding-left: #{$gutterWidth/2};
		padding-right: #{$gutterWidth/2};
	}

	.row {
		@include cf;
		margin-left: -#{$gutterWidth/2};
		margin-right: -#{$gutterWidth/2};

		/* Fix last column in a row if it has suffix */
		> div:last-child {
			&[class^="suffix"], &[class*=" suffix"] { float: get-float(default); }
		}
	}

	/* Fix units inside forms */
	form {
		[class^="unit-"], [class*=" unit-"] { clear: none; }
	}

	[class^="unit-"], [class*=" unit-"] {
		@include box-sizing(border-box);
		float: get-float(default);
		padding-left: #{$gutterWidth/2};
		padding-right: #{$gutterWidth/2};
		width: 100%;
	}

	// Columns width
	@for $i from 1 through ($colAmount) {
		.unit-#{$i} { @include seelva-col( $width: $i, $settings: false ); }
	}

	// Prefixes
	@for $i from 1 through ($colAmount - 1) {
		.prefix-#{$i} { @include seelva-col( $prefix: $i, $settings: false ); }
	}

	// Suffixes
	@for $i from 1 through ($colAmount - 1) {
		.suffix-#{$i} { @include seelva-col( $suffix: $i, $settings: false ); }
	}

	// Shifts for ordering
	@for $i from 1 through ($colAmount - 1) {
		.push-#{$i} { @include seelva-col-shift( $i ); }
	}

	// Shifts for ordering
	@for $i from 1 through ($colAmount - 1) {
		.pull-#{$i} { @include seelva-col-unshift( $i ); }
	}

	@each $device, $deviceAttrs in $devices-list {
		@if not device-is-alias($device) {
			// Create units for real devices, not for aliases

			/*! Units for '#{$device}' devices */
			@include mq($device) {
				@for $i from 1 through ($colAmount) {
					.unit-#{get-device-attr($device, abbr)}-#{$i} { @include seelva-col( $width: $i, $settings: false ); }
				}

				// Prefixes
				@for $i from 1 through ($colAmount - 1) {
					.prefix-#{get-device-attr($device, abbr)}-#{$i} { @include seelva-col( $prefix: $i, $settings: false ); }
				}

				// Suffixes
				@for $i from 1 through ($colAmount - 1) {
					.suffix-#{get-device-attr($device, abbr)}-#{$i} { @include seelva-col( $suffix: $i, $settings: false ); }
				}
			}
		}
	}
}
